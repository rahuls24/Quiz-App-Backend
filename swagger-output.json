{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Quiz App",
    "description": "Documentation of quiz app endpoints"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "Auth",
      "description": "Collection of user based endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "description": "any description..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/register-user-with-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to register user with email and password",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Rahul Kumar"
                },
                "email": {
                  "type": "string",
                  "example": "examinee@quiz.com"
                },
                "password": {
                  "type": "string",
                  "example": "qwerty"
                },
                "user": {
                  "$ref": "#/definitions/Role"
                }
              },
              "required": [
                "name",
                "email",
                "password",
                "user"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User is created successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When there is something wrong with request body.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "$ref": "#/definitions/BadRequestForCreateUserWithEmailAndPassword"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something wrong with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while saving the user into db"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/auth/signin-user-with-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to get login (JWT Based login) token(Bearer Token). ",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "examinee@quiz.com"
                },
                "password": {
                  "type": "string",
                  "example": "qwerty"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bearer Token is successfully generated.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "token": {
                  "type": "string",
                  "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
              },
              "required": [
                "status",
                "token"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When there is something wrong with request body.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "$ref": "#/definitions/BadRequestForSigninWithEmailAndPassword"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "When password is incorrect",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Password is not correct"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/auth/get-user-details": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to get current login user details",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              },
              "required": [
                "status",
                "user"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "When user is not present in db.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "No user found in DB."
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/quiz/save-a-quiz": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to save a quiz",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Quiz information.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "A Dummy Quiz Name"
                },
                "topics": {
                  "type": "string",
                  "example": "dsa,coding,nodejs,js"
                },
                "quizDuration": {
                  "type": "string",
                  "example": "30"
                }
              },
              "required": [
                "name",
                "topics",
                "quizDuration"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "When quiz is saved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When there is something wrong with request body.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "$ref": "#/definitions/BadRequestForSaveQuiz"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while saving the quiz"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/get-quizzes-of-examiners": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to get all quizzes of list of examiner",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "List of examiner ids",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "examiners": {
                  "type": "array",
                  "example": [
                    "629ca58c0cf3c0efda1644b5",
                    "629ca3d78b22bd7a8ad4e47e"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "examiners"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When quizzes are retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "quizzes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Quiz"
                  }
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while getting quizzes"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/get-all-enrolled-quizzes": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to get all quiz of the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "When quizzes are retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "quizzes": {
                  "$ref": "#/definitions/Quiz"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while getting quiz for the user"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/get-all-unenrolled-quizzes": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to get all unenrolled quizzes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "When quizzes are retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "quizzes": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Quiz"
                  }
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "When role is matched with defined roles",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while retrieving quizzes"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/enroll-for-a-quiz": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to enroll in a quiz",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Quiz Id in which examinee want to enroll",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quizId": {
                  "type": "string",
                  "example": "629ca3d78b22bd7a8ad4e47e"
                }
              },
              "required": [
                "quizId"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "When quizzes are retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When the quiz id is not a valid id",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Please send a valid quiz id"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "When user is already enrolled in the quiz",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "User is already enrolled in this quiz or quiz may not found"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/save-start-time": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to save quiz start time for a quiz",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Quiz id of quiz for which you want to save start time",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quizId": {
                  "type": "string",
                  "example": "629ca3d78b22bd7a8ad4e47e"
                }
              },
              "required": [
                "quizId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "When start time is saved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When req body contains invalid quiz id.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Please send a valid quiz id"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "When quiz is not found.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Quiz is not present in DB"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "When start time is already present.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Time is already present"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while saving time in db."
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/get-quiz-start-time/{quizId}": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to get start time of a quiz",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Quiz ID for which you want to retrieve its start time"
          }
        ],
        "responses": {
          "200": {
            "description": "When start time is retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "startTime": {
                  "type": "string",
                  "example": "2022-06-05T12:45:38.998Z"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When req body contains invalid quiz id.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Please send a valid quiz id"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "When quiz is not found.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Quiz is not present in DB"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "When more than one start time is present",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "There is more than one time for this Quiz"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while retrieving start time of the quiz from db"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/submit-quiz": {
      "post": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to submit the quiz",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Quiz answers details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "quizId": {
                  "type": "string",
                  "example": "629ca58c0cf3c0efda1644b5"
                },
                "submittedQuestions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "629ca58c0cf3c0efda1644b5"
                      },
                      "answers": {
                        "type": "array",
                        "example": [
                          "0"
                        ],
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "quizId",
                "submittedQuestions"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When quiz is submitted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "result": {
                  "type": "object",
                  "properties": {
                    "marks": {
                      "type": "number",
                      "example": 2
                    },
                    "numberOfRightAnswers": {
                      "type": "number",
                      "example": 2
                    },
                    "numberOfWrongAnswers": {
                      "type": "number",
                      "example": 3
                    },
                    "numberSkippedQuestions": {
                      "type": "number",
                      "example": 1
                    },
                    "totalTimeTaken": {
                      "type": "number",
                      "example": 10
                    }
                  }
                }
              },
              "required": [
                "status",
                "result"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When there is something wrong with request body.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Please give a valid quiz id || Something wrong with submittedQuestions obj"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while fetching questions from DB || Something went wrong while getting quiz start time || Something went wrong while saving the marks into db. Please try again"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/quiz/get-quizzes-history": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "description": "Endpoint to get quizzes history of current examinee.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "When quizzes history of current examinee is retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "quizzesDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "quizId": {
                        "type": "string",
                        "example": "629ca58c0cf3c0efda1644b5"
                      },
                      "quizName": {
                        "type": "string",
                        "example": "Quiz Name"
                      },
                      "quizDuration": {
                        "type": "number",
                        "example": 30
                      },
                      "quizResult": {
                        "type": "object",
                        "properties": {
                          "marks": {
                            "type": "number",
                            "example": 3
                          },
                          "examineeId": {
                            "type": "string",
                            "example": "629ca42f8b22bd7a8ad4e496"
                          },
                          "numberOfRightAnswers": {
                            "type": "number",
                            "example": 3
                          },
                          "numberOfWrongAnswers": {
                            "type": "number",
                            "example": 2
                          },
                          "totalTimeTaken": {
                            "type": "number",
                            "example": 3
                          },
                          "numberSkippedQuestions": {
                            "type": "number",
                            "example": 2
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "status",
                "quizzesDetails"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while retrieving quizzes"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/question/save-questions": {
      "post": {
        "tags": [
          "Question"
        ],
        "description": "Endpoint to save a question in the db",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Question Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "questionText": {
                  "type": "string",
                  "example": "Question Title"
                },
                "questionType": {
                  "$ref": "#/definitions/QuestionType"
                },
                "quizzes": {
                  "type": "array",
                  "example": [
                    "629ca5720cf3c0efda1644b2"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "options": {
                  "type": "array",
                  "example": [
                    "option 1",
                    "option 2"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "answers": {
                  "type": "array",
                  "example": [
                    "0",
                    "1"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "questionText",
                "questionType",
                "quizzes",
                "options",
                "answers"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Questions are saved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When there is something wrong with request body.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Payload is not in required format. Please check and try again"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while saving the questions into db. Please try again"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/question/get-all-questions/{quizId}": {
      "get": {
        "tags": [
          "Question"
        ],
        "description": "Endpoint to getting all the questions of a quiz",
        "parameters": [
          {
            "name": "quizId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "quizId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Quiz ID for which you want to retrieve all its questions"
          }
        ],
        "responses": {
          "200": {
            "description": "Questions are saved successfully.     There will be 3 type of responses on basis of role and owner of the quiz.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "questions": {
                  "$ref": "#/definitions/Question"
                }
              },
              "required": [
                "status"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "When quiz id is a valid quiz id",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Please give a valid quiz id"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "When quiz id is not found in db",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Quiz is not found in db"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "When there is something with server",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "error": {
                  "type": "string",
                  "example": "Something went wrong while fetching questions from DB"
                }
              },
              "required": [
                "status",
                "error"
              ],
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Role": {
      "type": "string",
      "enum": [
        "examinee",
        "examiner"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Rahul Kumar"
        },
        "email": {
          "type": "string",
          "example": "rahuls24@quiz.com"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "isVerified": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "Quiz": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "629ca5720cf3c0efda1644b2"
        },
        "name": {
          "type": "string",
          "example": "Quiz Name"
        },
        "topics": {
          "type": "array",
          "example": [
            "Python",
            "Array"
          ],
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string",
          "example": "629ca3d78b22bd7a8ad4e47e"
        },
        "isFree": {
          "type": "boolean",
          "example": true
        },
        "price": {
          "type": "number",
          "example": 0
        },
        "createOn": {
          "type": "string",
          "example": "2022-06-05T12:45:38.998Z"
        },
        "imageUrl": {
          "type": "string",
          "example": "https://image-url.png"
        }
      }
    },
    "QuestionType": {
      "type": "string",
      "enum": [
        "multipleAnswer",
        "multipleAnswer"
      ]
    },
    "Question": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "62b6f8dfedb16962f3d5e7f3"
        },
        "questionText": {
          "type": "string",
          "example": "Question Title"
        },
        "questionType": {
          "type": "string",
          "example": "singleAnswer"
        },
        "quizzes": {
          "type": "array",
          "example": [
            "62b6f86dedb16962f3d5e7ee"
          ],
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "example": [
            "option 1 ",
            "option 2",
            "option 4",
            "option 3"
          ],
          "items": {
            "type": "string"
          }
        },
        "answers": {
          "type": "array",
          "example": [
            "2"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BadRequestForSigninWithEmailAndPassword": {
      "type": "string",
      "enum": [
        "Please provide value for all the parameter",
        "Please provide a valid email",
        "Password should be of minimum 6 characters"
      ]
    },
    "BadRequestForCreateUserWithEmailAndPassword": {
      "type": "string",
      "enum": [
        "Please provide value for all the parameter",
        "Please provide a valid email",
        "Password should be of minimum 6 characters",
        "Name should be of minimum 3 characters",
        "Role will be either examinee or examiner"
      ]
    },
    "BadRequestForSaveQuiz": {
      "type": "string",
      "enum": [
        "Please provide quiz name",
        "Please provide a valid number for quiz duration"
      ]
    }
  }
}